(compilationUnit(importDeclaration(import)(qualifiedName(identifier(java))(.)(identifier(io))(.)(identifier(IOException)))(;))(typeDeclaration(classOrInterfaceModifier(public))(classDeclaration(class)(identifier(TestJavaFile))(classBody({)(classBodyDeclaration(modifier(classOrInterfaceModifier(public)))(modifier(classOrInterfaceModifier(static)))(memberDeclaration(methodDeclaration(typeTypeOrVoid(void))(identifier(main))(formalParameters({'root': 'formalParameterList', 'children': [{'root': 'formalParameter', 'children': [{'root': 'typeType', 'children': [{'root': 'classOrInterfaceType', 'children': [{'root': 'typeIdentifier', 'children': [{'root': 'String', 'children': []}]}]}, {'root': '[', 'children': []}, {'root': ']', 'children': []}]}, {'root': 'variableDeclaratorId', 'children': [{'root': 'identifier', 'children': [{'root': 'args', 'children': []}]}]}]}]}))(methodBody(block({)(blockStatement(statement(expression(expression(expression(primary(identifier(System))))(.)(identifier(out)))(.)(methodCall(identifier(println))(arguments({'root': 'expressionList', 'children': [{'root': 'expression', 'children': [{'root': 'primary', 'children': [{'root': 'literal', 'children': [{'root': '"Press', 'children': []}, {'root': 'Enter', 'children': []}, {'root': 'to', 'children': []}, {'root': 'continue..."', 'children': []}]}]}]}]}))))(;)))(blockStatement(statement(expression(expression(expression))(.))(;)))(blockStatement(statement(try)))(}))))))(})))))