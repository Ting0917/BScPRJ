(program (programHeading program (identifier TestPascalFile) ;) (block (variableDeclarationPart var (variableDeclaration (identifierList (identifier dayNumber)) : (type_ (simpleType (typeIdentifier Integer)))) ; (variableDeclaration (identifierList (identifier dayName)) : (type_ (simpleType (typeIdentifier String)))) ;) (compoundStatement begin (statements (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier Write) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Enter a number (1-7) for the day of the week: '))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier ReadLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier dayNumber))))))))) ))))) ; (statement (unlabelledStatement (structuredStatement (conditionalStatement (caseStatement case (expression (simpleExpression (term (signedFactor (factor (variable (identifier dayNumber))))))) of (caseListElement (constList (constant (unsignedNumber (unsignedInteger 1)))) : (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier dayName)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Monday')))))))))))) ; (caseListElement (constList (constant (unsignedNumber (unsignedInteger 2)))) : (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier dayName)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Tuesday')))))))))))) ; (caseListElement (constList (constant (unsignedNumber (unsignedInteger 3)))) : (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier dayName)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Wednesday')))))))))))) ; (caseListElement (constList (constant (unsignedNumber (unsignedInteger 4)))) : (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier dayName)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Thursday')))))))))))) ; (caseListElement (constList (constant (unsignedNumber (unsignedInteger 5)))) : (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier dayName)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Friday')))))))))))) ; (caseListElement (constList (constant (unsignedNumber (unsignedInteger 6)))) : (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier dayName)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Saturday')))))))))))) ; (caseListElement (constList (constant (unsignedNumber (unsignedInteger 7)))) : (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier dayName)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Sunday')))))))))))) ; else (statements (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier dayName)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Invalid day'))))))))))) ; (statement (unlabelledStatement (simpleStatement emptyStatement_)))) end))))) ; (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier WriteLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'The day is: ')))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier dayName))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement emptyStatement_)))) end)) . <EOF>)
