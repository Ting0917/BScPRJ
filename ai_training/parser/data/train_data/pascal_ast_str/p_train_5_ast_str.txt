(program (programHeading program (identifier TestPascalFile) ;) (block (variableDeclarationPart var (variableDeclaration (identifierList (identifier number)) : (type_ (simpleType (typeIdentifier Integer)))) ;) (compoundStatement begin (statements (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier Write) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Enter an integer: '))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier ReadLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier number))))))))) ))))) ; (statement (unlabelledStatement (structuredStatement (conditionalStatement (ifStatement if (expression (simpleExpression (term (signedFactor (factor (variable (identifier number)))))) (relationaloperator >) (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 0))))))))) then (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier WriteLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'The number is positive.'))))))))) ))))) else (statement (unlabelledStatement (structuredStatement (conditionalStatement (ifStatement if (expression (simpleExpression (term (signedFactor (factor (variable (identifier number)))))) (relationaloperator <) (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 0))))))))) then (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier WriteLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'The number is negative.'))))))))) ))))) else (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier WriteLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'The number is zero.'))))))))) ))))))))))))))) ; (statement (unlabelledStatement (simpleStatement emptyStatement_)))) end)) . <EOF>)
