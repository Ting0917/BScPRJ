(program (programHeading program (identifier TestPascalFile) ;) (block (variableDeclarationPart var (variableDeclaration (identifierList (identifier firstPart) , (identifier secondPart) , (identifier combinedString)) : (type_ (simpleType (typeIdentifier String)))) ; (variableDeclaration (identifierList (identifier sub)) : (type_ (simpleType (typeIdentifier String)))) ; (variableDeclaration (identifierList (identifier length)) : (type_ (simpleType (typeIdentifier Integer)))) ;) (compoundStatement begin (statements (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier firstPart)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Hello, '))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier secondPart)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'World!'))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier combinedString)) := (expression (simpleExpression (term (signedFactor (factor (variable (identifier firstPart))))) (additiveoperator +) (simpleExpression (term (signedFactor (factor (variable (identifier secondPart)))))))))))) ; (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier WriteLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Concatenated String: ')))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier combinedString))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier sub)) := (expression (simpleExpression (term (signedFactor (factor (functionDesignator (identifier Copy) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier combinedString)))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 8))))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 5)))))))))) ))))))))))) ; (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier WriteLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Extracted Substring: ')))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier sub))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier length)) := (expression (simpleExpression (term (signedFactor (factor (functionDesignator (identifier Length) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier combinedString))))))))) ))))))))))) ; (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier WriteLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Length of String: ')))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier length))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement emptyStatement_)))) end)) . <EOF>)
