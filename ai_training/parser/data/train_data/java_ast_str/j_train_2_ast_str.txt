(compilationUnit (importDeclaration import (qualifiedName (identifier java) . (identifier io) . (identifier IOException)) ;) (typeDeclaration (classOrInterfaceModifier public) (classDeclaration class (identifier TestJavaFile) (classBody { (classBodyDeclaration (modifier (classOrInterfaceModifier public)) (modifier (classOrInterfaceModifier static)) (memberDeclaration (methodDeclaration (typeTypeOrVoid void) (identifier main) (formalParameters ( (formalParameterList (formalParameter (typeType (classOrInterfaceType (typeIdentifier String)) [ ]) (variableDeclaratorId (identifier args)))) )) (methodBody (block { (blockStatement (statement (expression (expression (expression (primary (identifier System))) . (identifier out)) . (methodCall (identifier println) (arguments ( (expressionList (expression (primary (literal "Hello, World!")))) )))) ;)) (blockStatement (statement try (block { (blockStatement (statement (expression (expression (expression (primary (identifier System))) . (identifier in)) . (methodCall (identifier read) (arguments ( )))) ;)) }) (catchClause catch ( (catchType (qualifiedName (identifier IOException))) (identifier e) ) (block { (blockStatement (statement (expression (expression (primary (identifier e))) . (methodCall (identifier printStackTrace) (arguments ( )))) ;)) })))) }))))) }))))
