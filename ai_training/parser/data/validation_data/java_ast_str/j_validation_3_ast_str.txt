(compilationUnit (typeDeclaration (classOrInterfaceModifier public) (classDeclaration class (identifier TestJavaFile) (classBody { (classBodyDeclaration (modifier (classOrInterfaceModifier public)) (modifier (classOrInterfaceModifier static)) (memberDeclaration (methodDeclaration (typeTypeOrVoid void) (identifier main) (formalParameters ( (formalParameterList (formalParameter (typeType (classOrInterfaceType (typeIdentifier String)) [ ]) (variableDeclaratorId (identifier args)))) )) (methodBody (block { (blockStatement (localVariableDeclaration (typeType (primitiveType int) [ ]) (variableDeclarators (variableDeclarator (variableDeclaratorId (identifier numbers)) = (variableInitializer (arrayInitializer { (variableInitializer (expression (primary (literal (integerLiteral 1))))) , (variableInitializer (expression (primary (literal (integerLiteral 2))))) , (variableInitializer (expression (primary (literal (integerLiteral 3))))) , (variableInitializer (expression (primary (literal (integerLiteral 4))))) , (variableInitializer (expression (primary (literal (integerLiteral 5))))) }))))) ;) (blockStatement (localVariableDeclaration (typeType (primitiveType int)) (variableDeclarators (variableDeclarator (variableDeclaratorId (identifier sum)) = (variableInitializer (expression (primary (literal (integerLiteral 0)))))))) ;) (blockStatement (statement for ( (forControl (forInit (localVariableDeclaration (typeType (primitiveType int)) (variableDeclarators (variableDeclarator (variableDeclaratorId (identifier i)) = (variableInitializer (expression (primary (literal (integerLiteral 0))))))))) ; (expression (expression (primary (identifier i))) < (expression (expression (primary (identifier numbers))) . (identifier length))) ; (expressionList (expression (expression (primary (identifier i))) ++))) ) (statement (block { (blockStatement (statement (expression (expression (primary (identifier sum))) += (expression (expression (primary (identifier numbers))) [ (expression (primary (identifier i))) ])) ;)) })))) (blockStatement (statement (expression (expression (expression (primary (identifier System))) . (identifier out)) . (methodCall (identifier println) (arguments ( (expressionList (expression (expression (primary (literal "The sum is: "))) + (expression (primary (identifier sum))))) )))) ;)) }))))) }))))
