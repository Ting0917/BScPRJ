(program (programHeading program (identifier TestPascalFile) ;) (block (typeDefinitionPart type (typeDefinition (identifier GradesArray) = (type_ (structuredType (unpackedStructuredType (arrayType array [ (typeList (indexType (simpleType (subrangeType (constant (unsignedNumber (unsignedInteger 1))) .. (constant (unsignedNumber (unsignedInteger 5))))))) ] of (componentType (type_ (simpleType (typeIdentifier Integer))))))))) ; (typeDefinition (identifier Student) = (type_ (structuredType (unpackedStructuredType (recordType record (fieldList (fixedPart (recordSection (identifierList (identifier name)) : (type_ (simpleType (typeIdentifier String)))) ; (recordSection (identifierList (identifier grades)) : (type_ (simpleType (typeIdentifier (identifier GradesArray)))))) ; variantPart) end))))) ;) (variableDeclarationPart var (variableDeclaration (identifierList (identifier student1)) : (type_ (simpleType (typeIdentifier (identifier Student))))) ; (variableDeclaration (identifierList (identifier sum)) : (type_ (simpleType (typeIdentifier Integer)))) ; (variableDeclaration (identifierList (identifier i)) : (type_ (simpleType (typeIdentifier Integer)))) ; (variableDeclaration (identifierList (identifier average)) : (type_ (simpleType (typeIdentifier Real)))) ;) (compoundStatement begin (statements (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier student1) . (identifier name)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Selina'))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier student1) . (identifier grades) [ (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 1)))))))) ]) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 85)))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier student1) . (identifier grades) [ (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 2)))))))) ]) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 92)))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier student1) . (identifier grades) [ (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 3)))))))) ]) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 78)))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier student1) . (identifier grades) [ (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 4)))))))) ]) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 90)))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier student1) . (identifier grades) [ (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 5)))))))) ]) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 88)))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier sum)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 0)))))))))))) ; (statement (unlabelledStatement (structuredStatement (repetetiveStatement (forStatement for (identifier i) := (forList (initialValue (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 1))))))))) to (finalValue (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 5)))))))))) do (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier sum)) := (expression (simpleExpression (term (signedFactor (factor (variable (identifier sum))))) (additiveoperator +) (simpleExpression (term (signedFactor (factor (variable (identifier student1) . (identifier grades) [ (expression (simpleExpression (term (signedFactor (factor (variable (identifier i))))))) ])))))))))))))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier average)) := (expression (simpleExpression (term (signedFactor (factor (variable (identifier sum)))) (multiplicativeoperator /) (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedReal 5.0))))))))))))) ; (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier WriteLn) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'Average grade for ')))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier student1) . (identifier name)))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string ' is: ')))))))) , (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier average))))))) (parameterwidth : (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 0))))))))) (parameterwidth : (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 2))))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement emptyStatement_)))) end)) . <EOF>)
