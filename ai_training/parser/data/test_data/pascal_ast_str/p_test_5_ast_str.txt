(program (programHeading program (identifier TestPascalFile) ;) (block (variableDeclarationPart var (variableDeclaration (identifierList (identifier i) , (identifier count)) : (type_ (simpleType (typeIdentifier Integer)))) ;) (compoundStatement begin (statements (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier Writeln) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'For loop (1 to 5):'))))))))) ))))) ; (statement (unlabelledStatement (structuredStatement (repetetiveStatement (forStatement for (identifier i) := (forList (initialValue (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 1))))))))) to (finalValue (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 5)))))))))) do (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier Writeln) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier i))))))))) )))))))))) ; (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier Writeln) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (string 'While loop (5 to 1):'))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier count)) := (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 5)))))))))))) ; (statement (unlabelledStatement (structuredStatement (repetetiveStatement (whileStatement while (expression (simpleExpression (term (signedFactor (factor (variable (identifier count)))))) (relationaloperator >) (expression (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 0))))))))) do (statement (unlabelledStatement (structuredStatement (compoundStatement begin (statements (statement (unlabelledStatement (simpleStatement (procedureStatement (identifier Writeln) ( (parameterList (actualParameter (expression (simpleExpression (term (signedFactor (factor (variable (identifier count))))))))) ))))) ; (statement (unlabelledStatement (simpleStatement (assignmentStatement (variable (identifier count)) := (expression (simpleExpression (term (signedFactor (factor (variable (identifier count))))) (additiveoperator -) (simpleExpression (term (signedFactor (factor (unsignedConstant (unsignedNumber (unsignedInteger 1))))))))))))) ; (statement (unlabelledStatement (simpleStatement emptyStatement_)))) end))))))))) ; (statement (unlabelledStatement (simpleStatement emptyStatement_)))) end)) . <EOF>)
